@page "/api-docs/dota-voice-lines/bearer"
@using FakeAPI.BlazorWasm.Pages.Components.ApiContent
@using System.Text.Json
@using static FakeAPI.BlazorWasm.Pages.Components.ApiContent.ApiContentAuthComponent

<RadzenHeading Size="H2" Text="📘 Dota Voice Lines Bearer API Docs" />

<ApiContentAuthComponent 
    Title="🔐 Authentication"
    Description="All of the endpoints are protected using Bearer Token JWT"
    Endpoint="POST /api/login"
    SampleJson="@JsonSerializer.Serialize(new 
    { 
        username = "bearerusername", 
        password = "BearerPassword!123" 
    }, new JsonSerializerOptions { WriteIndented = true })"
    SampleJsonResponseSuccess="@LoginResponseExampleSuccess"
    SampleJsonResponseFailed="@LoginResponseExampleFailed"
    ParamSpecs="@LoginParamSpecs"
    ParamSpecsResponse="@LoginResponseSpecs" />

<ApiContentListTableComponent TItem="Dictionary<string, object>" Endpoints="@Endpoints" />


@code {
    private string LoginResponseExampleSuccess = JsonSerializer.Serialize(new 
    {
        responseCode = "200",
        responseMessage = "Login successful",
        data = new {
            token = "eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9..."
        }
    }, new JsonSerializerOptions { WriteIndented = true });

    private string LoginResponseExampleFailed = JsonSerializer.Serialize(new 
    {
        responseCode = "401",
        responseMessage = "Invalid username or password",
    }, new JsonSerializerOptions { WriteIndented = true });

    private List<Dictionary<string, string>> LoginParamSpecs = new()
    {
        new() { ["Name"] = "username", ["DataType"] = "string", ["MaxLength"] = "50", ["Notes"] = "Username for login" },
        new() { ["Name"] = "password", ["DataType"] = "string", ["MaxLength"] = "50", ["Notes"] = "Password for login" }
    };

    private List<Dictionary<string, string>> LoginResponseSpecs = new()
    {
        new() { ["Name"] = "responseCode", ["DataType"] = "string", ["Notes"] = "Status Code" },
        new() { ["Name"] = "responseMessage", ["DataType"] = "string", ["Notes"] = "Description" },
        new() { ["Name"] = "data.token", ["DataType"] = "string", ["Notes"] = "Access Token" }
    };


    private List<Dictionary<string, object>> Endpoints = new()
    {
        new() { ["Method"] = "POST", ["Path"] = "/api/login", ["Description"] = "Login and get the token for protected endpoints", ["Auth"] = "Public" },
        new() { ["Method"] = "GET", ["Path"] = "/api/dotavoicelines/all", ["Description"] = "Get all voice lines", ["Auth"] = "JWT" },
        new() { ["Method"] = "GET", ["Path"] = "/api/dotavoicelines/random", ["Description"] = "Get single random voice line", ["Auth"] = "JWT" },
        new() { ["Method"] = "GET", ["Path"] = "/api/dotavoicelines/limit/{limit}", ["Description"] = "Get voice lines as limited number", ["Auth"] = "JWT" },
        new() { ["Method"] = "GET", ["Path"] = "/api/dotavoicelines/id/{id}", ["Description"] = "Get single voice line by id", ["Auth"] = "JWT" }
    };


},
